{"version":3,"sources":["assets/img/header.png","assets/img/banner.jpg","redux/reducers/authorReducers.js","redux/reducers/bookReducers.js","redux/reducers/favoriteReducers.js","redux/reducers/genreReducers.js","redux/reducers/reviewReducers.js","redux/reducers/profileReducers.js","redux/reducers/index.js","redux/store.js","services/index.js","redux/actions/bookActions.js","components/organisms/navbar/index.js","components/organisms/book/index.js","components/organisms/book/loading.js","components/atoms/alert/index.js","components/organisms/banner/index.js","components/organisms/banner/loading.js","components/organisms/footer/index.js","pages/Home.js","pages/Books.js","components/organisms/review/index.js","pages/Detail.js","redux/actions/reviewActions.js","redux/actions/favoritesActions.js","pages/Genre.js","redux/actions/profileActions.js","pages/member/Profile.js","pages/member/Favorite.js","pages/member/Review.js","pages/admin/Books.js","redux/actions/genreActions.js","redux/actions/authorActions.js","pages/admin/Detail.js","pages/admin/NewBook.js","pages/admin/Genres.js","pages/admin/Authors.js","pages/auth/auth.js","pages/auth/Login.js","pages/auth/SignUp.js","pages/auth/Activate.js","App.js","serviceWorker.js","index.js","assets/img/logo.png","assets/img/icon.png"],"names":["module","exports","defaultState","loading","result","options","authors","state","action","type","payload","data","books","detail","similar","book","initialState","favorite","genre","review","profile","combineReducers","favorites","genres","reviews","createStore","rootReducer","applyMiddleware","promiseMiddleware","logger","url","get","a","axios","body","config","getData","post","postData","addBook","apikey","bookName","bookDesc","file","bookPublished","bookLanguage","bookGenre","bookAuthor","bookStatus","formData","FormData","append","parseInt","value","headers","Authorization","patch","patchData","cover","id","form","imagedata","image","remove","delete","removeData","fetchBook","request","selectBook","Index","props","search","e","preventDefault","history","keyword","push","pathname","logout","Swal","fire","firebase","auth","signOut","Store","bookPage","getGenre","setState","componentDidMount","hasLogin","adminLogin","this","Navbar","bg","expand","fixed","className","Container","to","src","logo","alt","width","Toggle","aria-controls","Collapse","Nav","Link","onClick","NavDropdown","title","length","map","val","key","name","genreId","Divider","Form","onSubmit","inline","FormControl","placeholder","onChange","target","Item","Button","size","variant","Component","index","Card","replace","Img","Body","Title","Text","author","Badge","pill","language","Row","Col","lg","height","count","md","xs","Alert","message","header2","Home","getPopularBook","error","header","span","offset","mapDispatchToProps","connect","Books","getAllBooks","location","onSort","sort","b","handlePageChange","page","componentDidUpdate","Dropdown","Menu","active","activePage","itemsCountPerPage","perPage","totalItemsCount","totalData","pageRangeDisplayed","itemClass","linkClass","hideNavigation","Review","user","rating","Detail","getDetailBook","getSimilarBook","getReviewBook","genre_id","fetchSimilar","selectReview","addFavorite","userId","addReview","ratingInput","reviewInput","postReview","modal","showModal","hideModal","changeRating","label","style","backgroundImage","description","fullname","position","showUnder","Modal","show","onHide","Header","closeButton","Group","controlId","Label","Control","defaultValue","readOnly","as","rows","Footer","params","book_id","user_id","Genre","selectProfile","Profile","getProfile","email","birthday","birthdate","gender","bio","changeGender","changeBirthday","updateProfile","icon","Favorite","getFavoriteBook","getFavorite","limit","deleteFavorite","book_favorites_id","block","getReview","fetchReview","deleteReview","Table","striped","bordered","hover","responsive","created_at","slice","status","fetchGenre","fetchAuthor","published","changeGenre","changeAuthor","changeStatus","onDrop","event","picture","updateCover","text","then","onUpdate","updateBook","onDelete","removeBook","withIcon","singleImage","buttonText","imgExtension","maxFileSize","required","author_id","status_id","newBook","bookCover","URL","createObjectURL","postBook","Genres","getAllGenres","selectGenre","showAddModal","genreName","edit","deleteGenre","onEdit","updateGenre","addNew","postGenre","handleAddClose","handleAddShow","Authors","getAllAuthors","selectAuthors","authorName","authorId","deleteAuthors","deleteAuthor","updateAuthor","postAuthor","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","Login","onLogin","password","login","role","pin","response","errorMsg","closeError","googleAuth","signInWithPopup","res","uid","catch","facebookAuth","onClose","dismissible","Heading","disabled","aria-hidden","SignUp","onSignUp","password2","signUp","Activate","onActivate","code","activate","App","store","path","exact","component","AdminBook","NewBook","AdminDetail","AdminGenre","AdminAuthor","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onSuccess","ReactDOM","render","document","getElementById","process","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.64383221.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.9c0370f0.png\";","module.exports = __webpack_public_path__ + \"static/media/banner.d0caf3e6.jpg\";","const defaultState = {\r\n  loading: true,\r\n  result: [],\r\n  options: [],\r\n};\r\n\r\nconst authors = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // FETCH\r\n    case 'FETCH_AUTHOR_PENDING': {\r\n      return {\r\n        ...defaultState,\r\n      };\r\n    }\r\n    case 'FETCH_AUTHOR_FULFILLED': {\r\n      const { data, options } = action.payload.data;\r\n      return {\r\n        ...defaultState,\r\n        loading: false,\r\n        result: data,\r\n        options,\r\n      };\r\n    }\r\n    // DEFAULT\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default authors;\r\n","const defaultState = {\r\n  loading: false,\r\n  books: [],\r\n  detail: [],\r\n  options: [],\r\n  similar: [],\r\n};\r\n\r\nconst book = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // BOOK\r\n    case 'FETCH_BOOK_PENDING': {\r\n      return {\r\n        ...defaultState,\r\n        loading: true,\r\n      };\r\n    }\r\n    case 'FETCH_BOOK_FULFILLED': {\r\n      const { data, options } = action.payload.data;\r\n      return {\r\n        ...defaultState,\r\n        loading: false,\r\n        books: data,\r\n        options,\r\n      };\r\n    }\r\n    // DETAIL\r\n    case 'FETCH_DETAIL_PENDING': {\r\n      return {\r\n        ...defaultState,\r\n        loading: true,\r\n      };\r\n    }\r\n    case 'FETCH_DETAIL_FULFILLED': {\r\n      const { data, options } = action.payload.data;\r\n      return {\r\n        ...defaultState,\r\n        loading: false,\r\n        detail: data[0],\r\n        options,\r\n      };\r\n    }\r\n    // SIMILAR\r\n    case 'FETCH_SIMILAR_PENDING': {\r\n      return {\r\n        ...defaultState,\r\n        loading: true,\r\n      };\r\n    }\r\n    case 'FETCH_SIMILAR_FULFILLED': {\r\n      const { data, options } = action.payload.data;\r\n      return {\r\n        ...defaultState,\r\n        loading: false,\r\n        similar: data,\r\n        options,\r\n      };\r\n    }\r\n    // DEFAULT\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default book;\r\n","const initialState = {\r\n  loading: false,\r\n  result: [],\r\n};\r\n\r\nconst favorite = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_FAVORITE_PENDING': {\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    }\r\n    case 'GET_FAVORITE_FULFILLED': {\r\n      const { data, options } = action.payload.data;\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        result: data,\r\n        options,\r\n      };\r\n    }\r\n    case 'POST_FAVORITE_PENDING': {\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    }\r\n    case 'POST_FAVORITE_FULFILLED': {\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n      };\r\n    }\r\n    case 'DELETE_FAVORITE_PENDING': {\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    }\r\n    case 'DELETE_FAVORITE_FULFILLED': {\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default favorite;\r\n","const defaultState = {\r\n  loading: true,\r\n  result: [],\r\n  options: [],\r\n};\r\n\r\nconst genre = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // FETCH\r\n    case 'FETCH_GENRE_PENDING': {\r\n      return {\r\n        ...defaultState,\r\n      };\r\n    }\r\n    case 'FETCH_GENRE_FULFILLED': {\r\n      const { data, options } = action.payload.data;\r\n      return {\r\n        ...defaultState,\r\n        loading: false,\r\n        result: data,\r\n        options,\r\n      };\r\n    }\r\n    // DEFAULT\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default genre;\r\n","const defaultState = {\r\n  loading: false,\r\n  detail: [],\r\n  options: [],\r\n};\r\n\r\nconst review = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // REVIEW\r\n    case 'FETCH_REVIEW_PENDING': {\r\n      return {\r\n        ...defaultState,\r\n        loading: true,\r\n      };\r\n    }\r\n    case 'FETCH_REVIEW_FULFILLED': {\r\n      const { data, options } = action.payload.data;\r\n      return {\r\n        ...defaultState,\r\n        loading: false,\r\n        detail: data,\r\n        options,\r\n      };\r\n    }\r\n    // DEFAULT\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default review;\r\n","const defaultState = {\r\n  loading: true,\r\n  result: [],\r\n  options: [],\r\n};\r\n\r\nconst profile = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // FETCH\r\n    case 'FETCH_PROFILE_PENDING': {\r\n      return {\r\n        ...defaultState,\r\n      };\r\n    }\r\n    case 'FETCH_PROFILE_FULFILLED': {\r\n      const { data, options } = action.payload.data;\r\n      return {\r\n        ...defaultState,\r\n        loading: false,\r\n        result: data[0],\r\n        options,\r\n      };\r\n    }\r\n    // DEFAULT\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default profile;\r\n","import { combineReducers } from 'redux';\r\n\r\n// Reducers\r\nimport authors from './authorReducers';\r\nimport books from './bookReducers';\r\nimport favorites from './favoriteReducers';\r\nimport genres from './genreReducers';\r\nimport reviews from './reviewReducers';\r\nimport profile from './profileReducers';\r\n\r\nexport default combineReducers({\r\n  authors,\r\n  books,\r\n  favorites,\r\n  genres,\r\n  reviews,\r\n  profile,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport promiseMiddleware from 'redux-promise-middleware';\r\nimport rootReducer from './reducers';\r\n\r\nexport default createStore(rootReducer, applyMiddleware(promiseMiddleware, logger));\r\n","import axios from 'axios';\r\n\r\nconst url = 'http://18.209.178.237:8000/';\r\n\r\n// Fetch Data\r\nexport const get = async (data) => {\r\n  try {\r\n    const getData = await axios.get(url + data.url, data.body, data.config);\r\n    return getData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// Post Data\r\nexport const post = async (data) => {\r\n  try {\r\n    const postData = await axios.post(url + data.url, data.body, data.config);\r\n    return postData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// Post Book\r\nexport const addBook = async (data, apikey) => {\r\n  try {\r\n    const {\r\n      bookName,\r\n      bookDesc,\r\n      file,\r\n      bookPublished,\r\n      bookLanguage,\r\n      bookGenre,\r\n      bookAuthor,\r\n      bookStatus,\r\n    } = data;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    const formData = new FormData();\r\n    formData.append('name', bookName);\r\n    formData.append('description', bookDesc);\r\n    formData.append('picture', file);\r\n    formData.append('genreId', parseInt(bookGenre.value, 10));\r\n    formData.append('authorId', parseInt(bookAuthor.value, 10));\r\n    formData.append('statusId', parseInt(bookStatus.value, 10));\r\n    formData.append('published', bookPublished);\r\n    formData.append('language', bookLanguage);\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data',\r\n        Authorization: apikey,\r\n      },\r\n    };\r\n\r\n    const postData = await axios.post(`${url}book`, formData, config);\r\n    return postData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// Patch Data\r\nexport const patch = async (data) => {\r\n  try {\r\n    const patchData = await axios.patch(url + data.url, data.body, data.config);\r\n    return patchData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// Edit Cover\r\nexport const cover = async (id, data) => {\r\n  try {\r\n    // eslint-disable-next-line no-undef\r\n    const form = new FormData();\r\n    const imagedata = data.image;\r\n    form.append('picture', imagedata);\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data',\r\n        Authorization: data.apikey,\r\n      },\r\n    };\r\n\r\n    const patchData = await axios.patch(`${url}book/cover/${id}`, form, config);\r\n    return patchData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// Delete Data\r\nexport const remove = async (data) => {\r\n  try {\r\n    const removeData = await axios.delete(url + data.url, data.body, data.config);\r\n    return removeData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","/* eslint-disable import/prefer-default-export */\r\nimport { get, addBook, patch, remove, cover } from '../../services';\r\n\r\n// GET ALL book\r\nexport const fetchBook = (request) => {\r\n  return {\r\n    type: 'FETCH_BOOK',\r\n    payload: get({ url: `book${request}` }),\r\n  };\r\n};\r\n\r\n// SELECT one book\r\nexport const selectBook = (request) => {\r\n  return {\r\n    type: 'FETCH_DETAIL',\r\n    payload: get({ url: `book${request}` }),\r\n  };\r\n};\r\n\r\n// GET ALL similar book\r\nexport const fetchSimilar = (request) => {\r\n  return {\r\n    type: 'FETCH_SIMILAR',\r\n    payload: get({ url: `book${request}` }),\r\n  };\r\n};\r\n\r\n// Add New book\r\nexport const postBook = (request) => {\r\n  return {\r\n    type: 'POST_BOOK',\r\n    payload: addBook(request.data, request.apikey),\r\n  };\r\n};\r\n\r\n// UPDATE selected book\r\nexport const updateBook = (id, request, apikey) => {\r\n  return {\r\n    type: 'UPDATE_BOOK',\r\n    payload: patch({\r\n      url: `book/${id}`,\r\n      body: {\r\n        name: request.bookName || request.book.name,\r\n        description: request.bookDesc || request.book.description,\r\n        genre_id: request.bookGenre.value ? request.bookGenre.value : request.book.genre_id,\r\n        author_id: request.bookAuthor.value ? request.bookAuthor.value : request.book.author_id,\r\n        status_id: request.bookStatus.value ? request.bookStatus.value : request.book.status_id,\r\n        published: request.bookPublished || request.book.published,\r\n        language: request.bookLanguage || request.book.language,\r\n      },\r\n      config: {\r\n        headers: {\r\n          Authorization: apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\n// UPDATE cover book\r\nexport const updateCover = (request) => {\r\n  return {\r\n    type: 'UPDATE_BOOK',\r\n    payload: cover(request.id, {\r\n      image: request.picture,\r\n      apikey: request.apikey,\r\n    }),\r\n  };\r\n};\r\n\r\n// Remove selected book\r\nexport const removeBook = (request) => {\r\n  return {\r\n    type: 'DELETE_BOOK',\r\n    payload: remove({\r\n      url: `book/${request.id}`,\r\n      body: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport firebase from 'firebase/app';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Form, FormControl, Container, Button, NavDropdown } from 'react-bootstrap';\r\nimport Store from 'store2';\r\nimport { get } from '../../../services';\r\n\r\nimport logo from '../../../assets/img/logo.png';\r\n\r\nexport default class Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasLogin: Store('login') || false,\r\n      adminLogin: Store('adminLogin') || false,\r\n      keyword: null,\r\n      genre: [],\r\n    };\r\n  }\r\n\r\n  search = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { history } = this.props;\r\n    const { keyword } = this.state;\r\n    history.push({\r\n      pathname: '/book',\r\n      search: `?search=${keyword}`,\r\n      state: keyword,\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    Swal.fire('Logout success', 'successfully logout', 'success');\r\n    firebase.auth().signOut();\r\n    Store(false);\r\n    const { history } = this.props;\r\n    history.push('/login');\r\n  };\r\n\r\n  bookPage = () => {\r\n    const { history } = this.props;\r\n    history.push({\r\n      pathname: '/book',\r\n    });\r\n  };\r\n\r\n  getGenre = async () => {\r\n    try {\r\n      const genre = await get({\r\n        url: 'genre',\r\n      });\r\n      const { data } = genre.data;\r\n      this.setState({ genre: data });\r\n      // eslint-disable-next-line no-empty\r\n    } catch (error) {}\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getGenre();\r\n  };\r\n\r\n  render() {\r\n    const { genre, hasLogin, adminLogin } = this.state;\r\n    return (\r\n      <>\r\n        <Navbar\r\n          bg=\"white\"\r\n          expand=\"lg\"\r\n          fixed=\"top\"\r\n          className=\"shadow-sm animate__animated animate__fadeInDown\"\r\n        >\r\n          <Container>\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n              <img src={logo} alt=\"Logo\" width=\"100\" />\r\n            </Link>\r\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Link className=\"nav-link \" to=\"/\">\r\n                  Home\r\n                </Link>\r\n                <Nav.Link onClick={this.bookPage}>Book</Nav.Link>\r\n                <NavDropdown title=\"Genre\" id=\"basic-nav-dropdown\">\r\n                  {genre.length > 1 &&\r\n                    genre.map((val) => (\r\n                      <Link\r\n                        className=\"dropdown-item\"\r\n                        key={val.id}\r\n                        to={{\r\n                          pathname: `/genre/${val.name}`,\r\n                          state: { genreId: val.id, name: val.name },\r\n                        }}\r\n                      >\r\n                        {val.name}\r\n                      </Link>\r\n                    ))}\r\n                </NavDropdown>\r\n                {adminLogin ? (\r\n                  <NavDropdown title=\"Manage\" id=\"basic-nav-dropdown\">\r\n                    <Link to=\"/admin/book\" className=\"dropdown-item\">\r\n                      Book Manage\r\n                    </Link>\r\n                    <Link to=\"/admin/genre\" className=\"dropdown-item\">\r\n                      Genre Manage\r\n                    </Link>\r\n                    <Link to=\"/admin/author\" className=\"dropdown-item\">\r\n                      Author Manage\r\n                    </Link>\r\n                  </NavDropdown>\r\n                ) : null}\r\n              </Nav>\r\n              <Nav className=\"ml-auto\">\r\n                <NavDropdown.Divider className=\"d-lg-none\" />\r\n                <Form className=\"mx-2 my-2 my-lg-0\" onSubmit={this.search} inline>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Search book...\"\r\n                    className=\"mr-sm-2 bg-light\"\r\n                    onChange={(e) => this.setState({ keyword: e.target.value })}\r\n                  />\r\n                </Form>\r\n                {hasLogin ? (\r\n                  <>\r\n                    <NavDropdown title=\"Member\" id=\"basic-nav-dropdown\">\r\n                      <Link to=\"/profile\" className=\"dropdown-item\">\r\n                        Profile\r\n                      </Link>\r\n                      <Link to=\"/favorite\" className=\"dropdown-item\">\r\n                        Favorite\r\n                      </Link>\r\n                      <Link to=\"/review\" className=\"dropdown-item\">\r\n                        Review\r\n                      </Link>\r\n                      <NavDropdown.Divider />\r\n                      <NavDropdown.Item onClick={this.logout}>Logout</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {/* Not Logged In */}\r\n                    <NavDropdown.Divider className=\"d-lg-none\" />\r\n                    <Link className=\"nav-link \" to=\"/login\">\r\n                      <span className=\"d-none d-lg-block\">Log In</span>\r\n                      <Button className=\"w-100 d-lg-none\" size=\"sm\" variant=\"dark\">\r\n                        Log In\r\n                      </Button>\r\n                    </Link>\r\n                    <Link className=\"nav-link\" to=\"/sign-up\">\r\n                      <Button className=\"w-100\" size=\"sm\">\r\n                        Sign Up\r\n                      </Button>\r\n                    </Link>\r\n                  </>\r\n                )}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React from 'react';\r\nimport { Card, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst url = 'http://18.209.178.237:8000/';\r\n\r\nexport default function index(props) {\r\n  return (\r\n    <Card className=\"border-0 bg-transparent\">\r\n      <Link\r\n        to={{ pathname: `/book/${props.title.replace(/\\s/g, '-')}`, state: { id: props.id } }}\r\n        className=\"stretched-link\"\r\n      />\r\n      <Card.Img\r\n        variant=\"top\"\r\n        src={url + props.cover}\r\n        className=\"rounded mx-auto card-cover animate__animated animate__fadeIn\"\r\n        alt={props.title}\r\n      />\r\n      <Card.Body className=\"px-0\">\r\n        <Card.Title className=\"font-weight-bold text-truncate\">\r\n          {props.title || 'unknown'}\r\n        </Card.Title>\r\n        <Card.Text>{props.author || 'unknown'}</Card.Text>\r\n        <Badge pill variant=\"primary mr-2 py-2 px-2\">\r\n          {props.genre || 'unknown'}\r\n        </Badge>\r\n        <Badge pill variant=\"dark py-2 px-2\">\r\n          {props.language || 'unknown'}\r\n        </Badge>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nexport default function loading() {\r\n  return (\r\n    <Row>\r\n      {/* Loader On Desktop */}\r\n      <Col lg={3} className=\"d-none d-lg-block\">\r\n        <Skeleton height={350} />\r\n        <div className=\"my-3\" />\r\n        <Skeleton count={3} />\r\n      </Col>\r\n      <Col lg={3} className=\"d-none d-lg-block\">\r\n        <Skeleton height={350} />\r\n        <div className=\"my-3\" />\r\n        <Skeleton count={3} />\r\n      </Col>\r\n      <Col lg={3} className=\"d-none d-lg-block\">\r\n        <Skeleton height={350} />\r\n        <div className=\"my-3\" />\r\n        <Skeleton count={3} />\r\n      </Col>\r\n      <Col lg={3} className=\"d-none d-lg-block\">\r\n        <Skeleton height={350} />\r\n        <div className=\"my-3\" />\r\n        <Skeleton count={3} />\r\n      </Col>\r\n      {/* Loader On Mobile */}\r\n      <Col lg={3} md={6} xs={6} className=\"d-lg-none\">\r\n        <Skeleton height={220} />\r\n        <div className=\"my-3\" />\r\n        <Skeleton count={3} />\r\n      </Col>\r\n      <Col lg={3} md={6} xs={6} className=\"d-lg-none\">\r\n        <Skeleton height={220} />\r\n        <div className=\"my-3\" />\r\n        <Skeleton count={3} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport default function index(props) {\r\n  return <Alert variant={props.variant || 'danger'}>{props.message || '-'}</Alert>;\r\n}\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport header2 from '../../../assets/img/banner.jpg';\r\n\r\nexport default function index() {\r\n  return (\r\n    <section>\r\n      <Container>\r\n        <div className=\"banner animate__animated animate__fadeIn\">\r\n          <Link\r\n            className=\"dropdown-item\"\r\n            to={{\r\n              pathname: `/book`,\r\n              search: '?search=harry potter',\r\n              state: 'harry potter',\r\n            }}\r\n          >\r\n            <img src={header2} className=\"w-100\" alt=\"Banner\" />\r\n          </Link>\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nexport default function loading() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col lg={12}>\r\n          <Skeleton height={200} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function index() {\r\n  return (\r\n    <footer id=\"sticky-footer\">\r\n      <div className=\"bottom-footer mt-4 py-1\">\r\n        <p className=\"text-white text-center mt-2\">\r\n          Copyright &copy; 2020 Kuma Book. Build By Bilkis Ismail\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { fetchBook } from '../redux/actions/bookActions';\r\n\r\n// Assets\r\nimport header from '../assets/img/header.png';\r\n\r\n// Component\r\nimport Navbar from '../components/organisms/navbar';\r\nimport Book from '../components/organisms/book';\r\nimport BookLoader from '../components/organisms/book/loading';\r\nimport Alert from '../components/atoms/alert';\r\nimport Banner from '../components/organisms/banner';\r\nimport BannerLoader from '../components/organisms/banner/loading';\r\nimport Footer from '../components/organisms/footer';\r\n\r\nexport class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  getPopularBook = async () => {\r\n    try {\r\n      await this.props.fetchBook('?limit=8');\r\n      const { books } = this.props.books;\r\n      this.setState({ books, error: false });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getPopularBook();\r\n  };\r\n\r\n  render() {\r\n    const { books, error } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        {/* Header */}\r\n        <header className=\"animate__animated animate__bounceInLeft\">\r\n          <Container className=\"my-5\">\r\n            <Row>\r\n              <Col lg={6}>\r\n                <img src={header} className=\"w-100\" alt=\"banner\" />\r\n              </Col>\r\n              <Col lg={{ span: 5, offset: 1 }} className=\"d-flex align-items-center mt-5 mt-lg-0\">\r\n                <div className=\"banner-content d-none d-lg-block\">\r\n                  <h1 className=\"font-weight-bold\">Kuma Book</h1>\r\n                  <p>The world&apos;s largest novel and manga wikipedia and database 100% free</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </header>\r\n\r\n        {/* Popular Book */}\r\n        <section>\r\n          <Container className=\"my-5\">\r\n            <div className=\"head-title\">\r\n              <h3 className=\"main-title font-weight-bold\">Popular Book</h3>\r\n              <div className=\"divinder\" />\r\n            </div>\r\n\r\n            {/* Show if failed fetch */}\r\n            {error ? <Alert message=\"Can't get book from server\" /> : null}\r\n\r\n            {/* Fetch books */}\r\n            {!books.length ? (\r\n              <BookLoader />\r\n            ) : (\r\n              <Row>\r\n                {books.map((val) => (\r\n                  <Col lg={3} md={6} xs={6} key={val.id} className=\"mb-5\">\r\n                    <Book\r\n                      id={val.id}\r\n                      cover={val.cover}\r\n                      title={val.name}\r\n                      author={val.author}\r\n                      genre={val.genre}\r\n                      language={val.language}\r\n                    />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            )}\r\n          </Container>\r\n        </section>\r\n\r\n        {/* Banner */}\r\n        {!books.length ? <BannerLoader /> : <Banner />}\r\n\r\n        <div className=\"my-5\" />\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  books: state.books,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchBook };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Pagination from 'react-js-pagination';\r\nimport { Container, Row, Col, Dropdown } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { fetchBook } from '../redux/actions/bookActions';\r\n\r\n// Component\r\nimport Navbar from '../components/organisms/navbar';\r\nimport Book from '../components/organisms/book';\r\nimport BookLoader from '../components/organisms/book/loading';\r\nimport Alert from '../components/atoms/alert';\r\nimport Footer from '../components/organisms/footer';\r\n\r\nexport class Books extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      options: [],\r\n      error: false,\r\n      sort: 1,\r\n    };\r\n  }\r\n\r\n  getAllBooks = async () => {\r\n    try {\r\n      const { state } = this.props.location;\r\n      if (state) {\r\n        await this.props.fetchBook(`?search=${state}&limit=8`);\r\n      } else {\r\n        await this.props.fetchBook('?limit=8');\r\n      }\r\n      const { books, options } = this.props.books;\r\n      this.setState({ books, options, error: false });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  onSort = (sort) => {\r\n    const { books } = this.state;\r\n    if (parseInt(sort, 10) === 2) {\r\n      // DESC\r\n      books.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      this.setState({ books, sort: 2 });\r\n    } else {\r\n      // ASC\r\n      books.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      this.setState({ books, sort: 1 });\r\n    }\r\n  };\r\n\r\n  handlePageChange = async (page) => {\r\n    try {\r\n      await this.props.fetchBook(`?limit=8&page=${page}`);\r\n      const { books, options } = this.props.books;\r\n      this.setState({ books, options });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getAllBooks();\r\n  };\r\n\r\n  componentDidUpdate = (props) => {\r\n    if (props.location.search !== this.props.location.search) {\r\n      this.getAllBooks();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { books, options, error, sort } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        {/* Popular Book */}\r\n        <section>\r\n          <Container className=\"my-5\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"head-title\">\r\n                <h3 className=\"main-title font-weight-bold\">List Book</h3>\r\n                <div className=\"divinder w-50\" />\r\n              </div>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n                  Sort\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item active={sort === 1} onClick={() => this.onSort('1')}>\r\n                    Sort by name A - Z\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item active={sort === 2} onClick={() => this.onSort('2')}>\r\n                    Sort by name Z - A\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            {/* Show if failed fetch */}\r\n            {error ? <Alert message=\"Can't get book from server\" /> : null}\r\n\r\n            {/* Fetch books */}\r\n            {!books.length ? (\r\n              <BookLoader />\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  {books.map((val) => (\r\n                    <Col className=\"mb-5\" lg={3} md={6} xs={6} key={val.id}>\r\n                      <Book\r\n                        id={val.id}\r\n                        cover={val.cover}\r\n                        title={val.name}\r\n                        author={val.author}\r\n                        genre={val.genre}\r\n                        language={val.language}\r\n                      />\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n                <Pagination\r\n                  activePage={options.page}\r\n                  itemsCountPerPage={options.perPage}\r\n                  totalItemsCount={parseInt(options.totalData, 10)}\r\n                  pageRangeDisplayed={5}\r\n                  onChange={this.handlePageChange}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                  hideNavigation\r\n                />\r\n              </>\r\n            )}\r\n          </Container>\r\n        </section>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  books: state.books,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchBook };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);\r\n","/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nexport default function Review(props) {\r\n  return (\r\n    <Card className=\"m-3 shadow-sm animate__animated animate__fadeInUp\">\r\n      <Card.Body>\r\n        <blockquote className=\"blockquote mb-0\" />\r\n        <strong>{props.user || 'anonim'}</strong>\r\n        <p>\r\n          Overall Rating : <strong className=\"ml-1\">{props.rating || '-'}</strong>\r\n        </p>\r\n        <p>{props.review || '-'}</p>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable no-plusplus */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport Store from 'store2';\r\nimport Select from 'react-select';\r\nimport Swal from 'sweetalert2';\r\nimport ScrollToTop from 'react-scroll-up';\r\nimport { Container, Row, Col, Badge, Button, Modal, Form } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { selectBook, fetchSimilar } from '../redux/actions/bookActions';\r\nimport { selectReview, postReview } from '../redux/actions/reviewActions';\r\nimport { addFavorite } from '../redux/actions/favoritesActions';\r\n\r\n// Component\r\nimport Navbar from '../components/organisms/navbar';\r\nimport Book from '../components/organisms/book';\r\nimport Review from '../components/organisms/review';\r\nimport BookLoader from '../components/organisms/book/loading';\r\nimport Alert from '../components/atoms/alert';\r\nimport Footer from '../components/organisms/footer';\r\n\r\nconst url = 'http://18.209.178.237:8000/';\r\n\r\nexport class Detail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      book: null,\r\n      similar: [],\r\n      review: [],\r\n      error: false,\r\n      modal: false,\r\n      ratingInput: 0,\r\n      reviewInput: null,\r\n    };\r\n    const { state } = this.props.location;\r\n    if (!state) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  getDetailBook = async () => {\r\n    try {\r\n      const { id } = this.props.location.state;\r\n      Store('bookId', id);\r\n      await this.props.selectBook(`/${id}`);\r\n      const { detail } = this.props.books;\r\n      this.setState({ book: detail });\r\n\r\n      this.getSimilarBook();\r\n      this.getReviewBook();\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  getSimilarBook = async () => {\r\n    try {\r\n      const { genre_id } = this.state.book;\r\n      await this.props.fetchSimilar(`/genre/${genre_id}?limit=4`);\r\n      const { similar } = this.props.books;\r\n      this.setState({ similar });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  getReviewBook = async () => {\r\n    try {\r\n      const { id } = this.props.location.state;\r\n      await this.props.selectReview({ id });\r\n      const { detail } = this.props.reviews;\r\n      this.setState({ review: detail });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  addFavorite = async () => {\r\n    try {\r\n      const { id } = this.props.location.state;\r\n      this.props.addFavorite({\r\n        id,\r\n        userId: Store('userId'),\r\n        apikey: Store('apikey'),\r\n      });\r\n      Swal.fire('Added to favorites', 'successfully added to favorites', 'success');\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  addReview = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { id } = this.props.location.state;\r\n      const { ratingInput, reviewInput } = this.state;\r\n      await this.props.postReview({\r\n        id,\r\n        userId: Store('userId'),\r\n        ratingInput,\r\n        reviewInput,\r\n        apikey: Store('apikey'),\r\n      });\r\n      Swal.fire('Review successfully', 'successfully added review', 'success');\r\n      this.getReviewBook();\r\n      this.setState({\r\n        modal: false,\r\n        ratingInput: 0,\r\n        reviewInput: null,\r\n      });\r\n    } catch (error) {\r\n      Swal.fire('Opps something Wrong', 'failed added review', 'error');\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({ modal: true });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({ modal: false });\r\n  };\r\n\r\n  changeRating = (e) => {\r\n    this.setState({ ratingInput: e });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getDetailBook();\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    const { id } = this.props.location.state;\r\n    if (Store('bookId') !== id) {\r\n      this.getDetailBook();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { book, similar, review, ratingInput, reviewInput, error, modal } = this.state;\r\n    const rating = [];\r\n    for (let index = 1; index <= 10; index++) {\r\n      rating.push({ value: index, label: index });\r\n    }\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        {/* Banner Cover */}\r\n        {book ? (\r\n          <div\r\n            className=\"banner-cover animate__animated animate__fadeIn\"\r\n            style={{ backgroundImage: `url(${url + book.cover})` }}\r\n          />\r\n        ) : null}\r\n\r\n        {/* Book Detail */}\r\n        <section>\r\n          <Container className=\"my-5\">\r\n            <Row>\r\n              <Col lg={3}>\r\n                {!book ? (\r\n                  <div className=\"mb-5\">\r\n                    <Skeleton height={350} />\r\n                  </div>\r\n                ) : (\r\n                  <img\r\n                    src={url + book.cover}\r\n                    className=\"w-100 animate__animated animate__fadeIn animate__slow rounded shadow-lg mb-5 mb-lg-0\"\r\n                    alt={book.name}\r\n                  />\r\n                )}\r\n              </Col>\r\n              <Col lg={9}>\r\n                {!book ? (\r\n                  <div className=\"mb-5\">\r\n                    {error ? <Alert message=\"Can't get book from server\" /> : null}\r\n                    <Skeleton height={50} className=\"mb-4\" />\r\n                    <Skeleton count={5} />\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <h2 className=\"font-weight-bold text-dark\">{book.name}</h2>\r\n                    <p className=\"font-weight-bold text-dark\">{book.author}</p>\r\n                    <Badge pill variant=\"primary mr-2 py-2 px-2\">\r\n                      {book.genre}\r\n                    </Badge>\r\n                    <Badge pill variant=\"dark py-2 px-2\">\r\n                      {book.language}\r\n                    </Badge>\r\n                    <p className=\"mt-3 text-justify text-dark\">{book.description}</p>\r\n                    {Store('login') ? (\r\n                      <>\r\n                        <Button className=\"text-dark\" onClick={() => this.addFavorite()}>\r\n                          Add to favorite\r\n                        </Button>\r\n                        <Button variant=\"dark\" className=\"ml-2\" onClick={this.showModal}>\r\n                          Add Review\r\n                        </Button>\r\n                      </>\r\n                    ) : null}\r\n                  </>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n\r\n        <section>\r\n          <Container className=\"my-5 animate__animated animate__fadeIn\">\r\n            <div className=\"head-title\">\r\n              <h2 className=\"font-weight-bold\">Review Book</h2>\r\n              <div className=\"divinder\" />\r\n            </div>\r\n            {/* Show if failed fetch */}\r\n            {error ? <Alert message=\"Can't get review from server\" /> : null}\r\n\r\n            {/* Fetch book */}\r\n            {!review.length ? (\r\n              <Alert message=\"Review not found\" variant=\"warning\" />\r\n            ) : (\r\n              review.map((val) => (\r\n                <Review key={val.id} review={val.review} rating={val.rating} user={val.fullname} />\r\n              ))\r\n            )}\r\n          </Container>\r\n        </section>\r\n\r\n        <section>\r\n          <Container className=\"my-5 animate__animated animate__fadeIn\">\r\n            <div className=\"head-title\">\r\n              <h2 className=\"font-weight-bold\">Similar Book</h2>\r\n              <div className=\"divinder\" />\r\n            </div>\r\n            {/* Show if failed fetch */}\r\n            {error ? <Alert message=\"Can't get book from server\" /> : null}\r\n\r\n            {/* Fetch book */}\r\n            {!book ? (\r\n              <BookLoader />\r\n            ) : (\r\n              <Row>\r\n                {similar.map((val) => (\r\n                  <Col lg={3} md={6} xs={6} key={val.id}>\r\n                    <ScrollToTop style={{ position: 'relative !important' }} showUnder={0}>\r\n                      <Book\r\n                        id={val.id}\r\n                        cover={val.cover}\r\n                        title={val.name}\r\n                        author={val.author}\r\n                        genre={val.genre}\r\n                        language={val.language}\r\n                      />\r\n                    </ScrollToTop>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            )}\r\n          </Container>\r\n        </section>\r\n\r\n        <Modal show={modal} onHide={this.hideModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Review Book</Modal.Title>\r\n          </Modal.Header>\r\n          <Form onSubmit={this.addReview}>\r\n            <Modal.Body>\r\n              <Form.Group controlId=\"formBasicBook\">\r\n                <Form.Label>Book Name</Form.Label>\r\n                <Form.Control defaultValue={book ? book.name : 'Unknown'} readOnly />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicRating\">\r\n                <Form.Label>Rating</Form.Label>\r\n                <Select value={ratingInput} onChange={this.changeRating} options={rating} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicReview\">\r\n                <Form.Label>Review</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  onChange={(e) => this.setState({ reviewInput: e.target.value })}\r\n                  rows=\"3\"\r\n                  defaultValue={reviewInput}\r\n                />\r\n              </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.hideModal}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        </Modal>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  books: state.books,\r\n  reviews: state.reviews,\r\n});\r\n\r\nconst mapDispatchToProps = { selectBook, fetchSimilar, selectReview, addFavorite, postReview };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\r\n","/* eslint-disable import/prefer-default-export */\r\nimport { get, post, remove } from '../../services';\r\n\r\n// Get fetch review\r\nexport const fetchReview = (request) => {\r\n  return {\r\n    type: 'FETCH_REVIEW',\r\n    payload: get({\r\n      url: 'review',\r\n      body: {\r\n        params: {\r\n          limit: request.limit,\r\n          page: request.page,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\n// Get selected review\r\nexport const selectReview = (request) => {\r\n  return {\r\n    type: 'FETCH_REVIEW',\r\n    payload: get({\r\n      url: 'review',\r\n      body: {\r\n        params: { book_id: request.id },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\n// ADD NEW Review\r\nexport const postReview = (request) => {\r\n  return {\r\n    type: 'POST_REVIEW',\r\n    payload: post({\r\n      url: 'review',\r\n      body: {\r\n        book_id: request.id,\r\n        user_id: request.userId,\r\n        rating: parseInt(request.ratingInput.value, 10),\r\n        review: request.reviewInput,\r\n      },\r\n      config: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\n// Delete selected Review\r\nexport const deleteReview = (request) => {\r\n  return {\r\n    type: 'DELETE_REVIEW',\r\n    payload: remove({\r\n      url: `review/${request.id}`,\r\n      body: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n","/* eslint-disable import/prefer-default-export */\r\nimport { get, post, remove } from '../../services';\r\n\r\nexport const getFavorite = (request) => {\r\n  return {\r\n    type: 'GET_FAVORITE',\r\n    payload: get({\r\n      url: `profile/favorite/${request.id}`,\r\n      body: {\r\n        params: {\r\n          limit: request.limit,\r\n          page: request.page,\r\n        },\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\nexport const addFavorite = (request) => {\r\n  return {\r\n    type: 'POST_FAVORITE',\r\n    payload: post({\r\n      url: 'favorite',\r\n      body: {\r\n        book_id: request.id,\r\n        user_id: request.userId,\r\n      },\r\n      config: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\nexport const deleteFavorite = (request) => {\r\n  return {\r\n    type: 'DELETE_FAVORITE',\r\n    payload: remove({\r\n      url: `favorite/${request.id}`,\r\n      body: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n","/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport Pagination from 'react-js-pagination';\r\nimport { Container, Row, Col, Dropdown } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { fetchBook } from '../redux/actions/bookActions';\r\n\r\n// Component\r\nimport Navbar from '../components/organisms/navbar';\r\nimport Book from '../components/organisms/book';\r\nimport BookLoader from '../components/organisms/book/loading';\r\nimport Alert from '../components/atoms/alert';\r\nimport Footer from '../components/organisms/footer';\r\n\r\nexport class Genre extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      options: [],\r\n      error: false,\r\n      sort: 1,\r\n    };\r\n    const { state } = this.props.location;\r\n    if (!state) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  getAllBooks = async () => {\r\n    try {\r\n      const { genreId } = this.props.location.state;\r\n      await this.props.fetchBook(`/genre/${genreId}?limit=8`);\r\n      const { books, options } = this.props.books;\r\n      if (books) {\r\n        this.setState({ books, options, error: false });\r\n      } else {\r\n        this.setState({ error: true });\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  onSort = (sort) => {\r\n    const { books } = this.state;\r\n    if (parseInt(sort, 10) === 2) {\r\n      // DESC\r\n      books.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      this.setState({ books, sort: 2 });\r\n    } else {\r\n      // ASC\r\n      books.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      this.setState({ books, sort: 1 });\r\n    }\r\n  };\r\n\r\n  handlePageChange = async (page) => {\r\n    try {\r\n      const { genreId } = this.props.location.state;\r\n      await this.props.fetchBook(`/genre/${genreId}?limit=8&page=${page}`);\r\n      const { result, options } = this.props.books;\r\n      this.setState({\r\n        books: result,\r\n        options,\r\n      });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getAllBooks();\r\n  };\r\n\r\n  componentDidUpdate = (props) => {\r\n    if (props.location.state.name !== this.props.location.state.name) {\r\n      this.getAllBooks();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { books, options, error, sort } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        {/* Popular Book */}\r\n        <section>\r\n          <Container className=\"my-5\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"head-title\">\r\n                <h3 className=\"main-title font-weight-bold\">List Book</h3>\r\n                <div className=\"divinder w-50\" />\r\n              </div>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n                  Sort\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item active={sort === 1} onClick={() => this.onSort('1')}>\r\n                    Sort by name A - Z\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item active={sort === 2} onClick={() => this.onSort('2')}>\r\n                    Sort by name Z - A\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            {/* Show if failed fetch */}\r\n            {error ? <Alert message=\"Can't get book from server\" /> : null}\r\n\r\n            {/* Fetch books */}\r\n            {!books.length ? (\r\n              <BookLoader />\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  {books.map((val) => (\r\n                    <Col className=\"mb-5\" lg={3} md={6} xs={6} key={val.id}>\r\n                      <Book\r\n                        id={val.id}\r\n                        cover={val.cover}\r\n                        title={val.name}\r\n                        author={val.author}\r\n                        genre={val.genre}\r\n                        language={val.language}\r\n                      />\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n                <Pagination\r\n                  activePage={options.page}\r\n                  itemsCountPerPage={options.perPage}\r\n                  totalItemsCount={parseInt(options.totalData, 10)}\r\n                  pageRangeDisplayed={5}\r\n                  onChange={this.handlePageChange}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                  hideNavigation\r\n                />\r\n              </>\r\n            )}\r\n          </Container>\r\n        </section>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  books: state.books,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchBook };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Genre);\r\n","/* eslint-disable import/prefer-default-export */\r\nimport { get, patch } from '../../services';\r\n\r\n// Select profile\r\nexport const selectProfile = (request) => {\r\n  return {\r\n    type: 'FETCH_PROFILE',\r\n    payload: get({\r\n      url: `profile/${request.id}`,\r\n      body: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\n// Update profile\r\nexport const updateProfile = (request) => {\r\n  return {\r\n    type: 'UPDATE_GENRE',\r\n    payload: patch({\r\n      url: `profile/${request.userId}`,\r\n      body: {\r\n        fullname: request.fullname,\r\n        birthdate: request.birthday,\r\n        gender: request.gender,\r\n        bio: request.bio,\r\n      },\r\n      config: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport Store from 'store2';\r\nimport Swal from 'sweetalert2';\r\nimport { Container, Row, Col, Button, Form, Alert } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { selectProfile, updateProfile } from '../../redux/actions/profileActions';\r\n\r\n// Assets\r\nimport icon from '../../assets/img/icon.png';\r\n\r\n// Component\r\nimport Navbar from '../../components/organisms/navbar';\r\nimport Footer from '../../components/organisms/footer';\r\n\r\nexport class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullname: null,\r\n      email: null,\r\n      birthday: null,\r\n      gender: null,\r\n      bio: null,\r\n      error: false,\r\n    };\r\n    if (!Store('login')) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile = async () => {\r\n    try {\r\n      await this.props.selectProfile({\r\n        id: Store('userId'),\r\n        apikey: Store('apikey'),\r\n      });\r\n      const { result } = this.props.profile;\r\n      this.setState({\r\n        fullname: result.fullname,\r\n        email: result.email,\r\n        birthday: result.birthdate,\r\n        gender: result.gender,\r\n        bio: result.bio,\r\n      });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  changeGender = (e) => {\r\n    this.setState({ gender: e });\r\n  };\r\n\r\n  changeBirthday = (e) => {\r\n    this.setState({ birthday: e });\r\n  };\r\n\r\n  updateProfile = async () => {\r\n    try {\r\n      const { fullname, birthday, gender, bio } = this.state;\r\n      this.props.updateProfile({\r\n        userId: Store('userId'),\r\n        fullname,\r\n        birthday,\r\n        gender: gender.value,\r\n        bio,\r\n        apikey: Store('apikey'),\r\n      });\r\n      Swal.fire('Update profile success', 'successfully update profile', 'success');\r\n      this.setState({ error: false });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.updateProfile();\r\n  };\r\n\r\n  render() {\r\n    const { fullname, email, birthday, gender, bio, error } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        <section>\r\n          <Container>\r\n            <div className=\"profile animate__animated animate__fadeIn mb-5\">\r\n              <img\r\n                src={icon}\r\n                className=\"rounded-circle img-thumbnail d-block mx-auto\"\r\n                alt=\"Profile Name\"\r\n              />\r\n              <h2 className=\"font-weight-bold text-center mt-4\">{fullname}</h2>\r\n              <p className=\"text-center\">{email}</p>\r\n            </div>\r\n            <div className=\"head-title text-center\">\r\n              <h3 className=\"main-title font-weight-bold\">Profile Data</h3>\r\n              <div className=\"divinder mx-auto\" />\r\n            </div>\r\n            <Row>\r\n              <Col lg={6} className=\"mx-auto\">\r\n                {error ? <Alert variant=\"warning\">Update profile failed</Alert> : null}\r\n                <Form onSubmit={this.onSubmit}>\r\n                  <Form.Group controlId=\"formBasicName\">\r\n                    <Form.Label>Full Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      onChange={(e) => this.setState({ fullname: e.target.value })}\r\n                      defaultValue={fullname}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      onChange={(e) => this.setState({ email: e.target.value })}\r\n                      defaultValue={email}\r\n                      readOnly\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasicBirthday\">\r\n                    <Form.Label className=\"d-block\">Bithday</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      onChange={(e) => this.setState({ birthday: e.target.value })}\r\n                      defaultValue={birthday}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasicGender\">\r\n                    <Form.Label>Gender</Form.Label>\r\n                    <Select\r\n                      value={gender}\r\n                      onChange={this.changeGender}\r\n                      options={[\r\n                        { value: 'Male', label: 'Male' },\r\n                        { value: 'Female', label: 'Female' },\r\n                        { value: 'Other', label: 'Other' },\r\n                      ]}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasicBio\">\r\n                    <Form.Label>Bio</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      onChange={(e) => this.setState({ bio: e.target.value })}\r\n                      rows=\"3\"\r\n                      defaultValue={bio}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nconst mapDispatchToProps = { selectProfile, updateProfile };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Store from 'store2';\r\nimport Pagination from 'react-js-pagination';\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { selectProfile } from '../../redux/actions/profileActions';\r\nimport { getFavorite, deleteFavorite } from '../../redux/actions/favoritesActions';\r\n\r\nimport icon from '../../assets/img/icon.png';\r\n\r\n// Component\r\nimport Navbar from '../../components/organisms/navbar';\r\nimport BookLoader from '../../components/organisms/book/loading';\r\nimport Alert from '../../components/atoms/alert';\r\nimport Footer from '../../components/organisms/footer';\r\n\r\nconst url = 'http://localhost:8000/';\r\n\r\nexport class Favorite extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      options: [],\r\n      fullname: null,\r\n      email: null,\r\n      error: false,\r\n    };\r\n    if (!Store('login')) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  getFavoriteBook = async () => {\r\n    try {\r\n      await this.props.getFavorite({\r\n        id: Store('userId'),\r\n        limit: 1,\r\n        page: 1,\r\n        apikey: Store('apikey'),\r\n      });\r\n      const { result, options } = this.props.favorite;\r\n      this.setState({\r\n        books: result,\r\n        options,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: true,\r\n        books: [],\r\n        options: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  handlePageChange = async (page) => {\r\n    try {\r\n      await this.props.getFavorite({\r\n        id: Store('userId'),\r\n        limit: 1,\r\n        page,\r\n        apikey: Store('apikey'),\r\n      });\r\n      const { result, options } = this.props.favorite;\r\n      this.setState({\r\n        books: result,\r\n        options,\r\n      });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  deleteFavorite = async (id) => {\r\n    try {\r\n      this.props.deleteFavorite({\r\n        id,\r\n        apikey: Store('apikey'),\r\n      });\r\n      Swal.fire('Deleted favorites', 'successfully deleted favorites', 'success');\r\n      this.getFavoriteBook();\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  getProfile = async () => {\r\n    try {\r\n      await this.props.selectProfile({\r\n        id: Store('userId'),\r\n        apikey: Store('apikey'),\r\n      });\r\n      const { result } = this.props.profile;\r\n      this.setState({\r\n        fullname: result.fullname,\r\n        email: result.email,\r\n      });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getProfile();\r\n    this.getFavoriteBook();\r\n  };\r\n\r\n  render() {\r\n    const { fullname, email, books, options, error } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        <section className=\"animate__animated animate__fadeIn\">\r\n          <Container>\r\n            <div className=\"profile mb-5\">\r\n              <img\r\n                src={icon}\r\n                className=\"rounded-circle img-thumbnail d-block mx-auto\"\r\n                alt=\"Profile Name\"\r\n              />\r\n              <h2 className=\"font-weight-bold text-center mt-4\">{fullname}</h2>\r\n              <p className=\"text-center\">{email}</p>\r\n            </div>\r\n            <div className=\"head-title text-center\">\r\n              <h3 className=\"main-title font-weight-bold\">Favorite Book</h3>\r\n              <div className=\"divinder mx-auto\" />\r\n            </div>\r\n\r\n            {/* Show if failed fetch */}\r\n            {error || !books.length ? (\r\n              <Alert variant=\"warning\" message=\"Can't get book from server\" />\r\n            ) : null}\r\n\r\n            {/* Fetch books */}\r\n            {!books.length ? (\r\n              <BookLoader />\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  {books.map((val) => (\r\n                    <Col lg={3} md={6} xs={6} key={val.book_favorites_id} className=\"mb-5\">\r\n                      <Card className=\"border-0 bg-transparent\">\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/book/${val.name.replace(/\\s/g, '-')}`,\r\n                            state: { id: val.id },\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={url + val.cover}\r\n                            className=\"rounded mx-auto card-cover animate__animated animate__fadeIn\"\r\n                            alt=\"cover\"\r\n                          />\r\n                        </Link>\r\n                        <Card.Body className=\"px-0\">\r\n                          <Card.Title className=\"font-weight-bold text-truncate\">\r\n                            {val.name || 'unknown'}\r\n                          </Card.Title>\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            size=\"sm\"\r\n                            onClick={() => this.deleteFavorite(val.book_favorites_id)}\r\n                            block\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n                <Pagination\r\n                  activePage={options.page}\r\n                  itemsCountPerPage={options.perPage}\r\n                  totalItemsCount={parseInt(options.totalData, 10)}\r\n                  pageRangeDisplayed={5}\r\n                  onChange={this.handlePageChange}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                  hideNavigation\r\n                />\r\n              </>\r\n            )}\r\n          </Container>\r\n        </section>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  favorite: state.favorites,\r\n  profile: state.profile,\r\n});\r\n\r\nconst mapDispatchToProps = { selectProfile, getFavorite, deleteFavorite };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorite);\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Store from 'store2';\r\nimport Swal from 'sweetalert2';\r\nimport Pagination from 'react-js-pagination';\r\nimport { Container, Row, Col, Button, Alert, Table } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { selectProfile } from '../../redux/actions/profileActions';\r\nimport { fetchReview, deleteReview } from '../../redux/actions/reviewActions';\r\n\r\n// Assets\r\nimport icon from '../../assets/img/icon.png';\r\n\r\n// Component\r\nimport Navbar from '../../components/organisms/navbar';\r\nimport Footer from '../../components/organisms/footer';\r\n\r\nexport class Review extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullname: null,\r\n      email: null,\r\n      review: [],\r\n      options: [],\r\n      error: false,\r\n    };\r\n    if (!Store('login')) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProfile();\r\n    this.getReview();\r\n  }\r\n\r\n  getProfile = async () => {\r\n    try {\r\n      await this.props.selectProfile({\r\n        id: Store('userId'),\r\n        apikey: Store('apikey'),\r\n      });\r\n      const { result } = this.props.profile;\r\n      this.setState({\r\n        fullname: result.fullname,\r\n        email: result.email,\r\n      });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  getReview = async () => {\r\n    try {\r\n      await this.props.fetchReview({ limit: 5, page: 1 });\r\n      const { detail, options } = this.props.reviews;\r\n      this.setState({ review: detail, options });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  handlePageChange = async (page) => {\r\n    try {\r\n      await this.props.fetchReview({ limit: 5, page });\r\n      const { detail, options } = this.props.reviews;\r\n      this.setState({ review: detail, options });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  deleteReview = async (id) => {\r\n    try {\r\n      await this.props.deleteReview({ id, apikey: Store('apikey') });\r\n      Swal.fire('Delete review success', 'successfully delete review', 'success');\r\n      this.getReview();\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { fullname, email, review, options, error } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        <section>\r\n          <Container>\r\n            <div className=\"profile animate__animated animate__fadeIn mb-5\">\r\n              <img\r\n                src={icon}\r\n                className=\"rounded-circle img-thumbnail d-block mx-auto\"\r\n                alt=\"Profile Name\"\r\n              />\r\n              <h2 className=\"font-weight-bold text-center mt-4\">{fullname}</h2>\r\n              <p className=\"text-center\">{email}</p>\r\n            </div>\r\n            <div className=\"head-title text-center\">\r\n              <h3 className=\"main-title font-weight-bold\">Review Book</h3>\r\n              <div className=\"divinder mx-auto\" />\r\n            </div>\r\n            <Row>\r\n              <Col lg={12}>\r\n                {error ? <Alert variant=\"warning\">Review not found</Alert> : null}\r\n                <Table striped bordered hover responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Book Name</th>\r\n                      <th>Review</th>\r\n                      <th>Date</th>\r\n                      <th>Manage</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {review.map((val) => (\r\n                      <tr key={val.id}>\r\n                        <td>{val.name}</td>\r\n                        <td>{val.review}</td>\r\n                        <td>{val.created_at.slice(0, 10)}</td>\r\n                        <td>\r\n                          <Button variant=\"danger\" onClick={() => this.deleteReview(val.id)}>\r\n                            Delete\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n                <Pagination\r\n                  activePage={options.page}\r\n                  itemsCountPerPage={options.perPage}\r\n                  totalItemsCount={parseInt(options.totalData, 10)}\r\n                  pageRangeDisplayed={5}\r\n                  onChange={this.handlePageChange}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                  hideNavigation\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  reviews: state.reviews,\r\n});\r\n\r\nconst mapDispatchToProps = { selectProfile, fetchReview, deleteReview };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Review);\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Store from 'store2';\r\nimport Pagination from 'react-js-pagination';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Table, Dropdown, Alert } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { fetchBook } from '../../redux/actions/bookActions';\r\n\r\n// Component\r\nimport Navbar from '../../components/organisms/navbar';\r\nimport Footer from '../../components/organisms/footer';\r\n\r\nexport class Books extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      options: [],\r\n      error: false,\r\n      sort: 1,\r\n    };\r\n\r\n    if (!Store('login') && !Store('adminLogin') && !Store('pin')) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  getAllBooks = async () => {\r\n    try {\r\n      const { state } = this.props.location;\r\n      if (state) {\r\n        await this.props.fetchBook(`?search=${state}&limit=8`);\r\n      } else {\r\n        await this.props.fetchBook('?limit=8');\r\n      }\r\n      const { books, options } = this.props.books;\r\n      this.setState({ books, options, error: false });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  onSort = (sort) => {\r\n    const { books } = this.state;\r\n    if (parseInt(sort, 10) === 2) {\r\n      // DESC\r\n      books.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      this.setState({ books, sort: 2 });\r\n    } else {\r\n      // ASC\r\n      books.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      this.setState({ books, sort: 1 });\r\n    }\r\n  };\r\n\r\n  handlePageChange = async (page) => {\r\n    try {\r\n      await this.props.fetchBook(`?limit=8&page=${page}`);\r\n      const { books, options } = this.props.books;\r\n      this.setState({ books, options });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getAllBooks();\r\n  };\r\n\r\n  componentDidUpdate = (props) => {\r\n    if (props.location.search !== this.props.location.search) {\r\n      this.getAllBooks();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { books, options, error, sort } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        <section>\r\n          <Container>\r\n            <div className=\"head-title\">\r\n              <h3 className=\"main-title font-weight-bold\">List Book</h3>\r\n              <div className=\"divinder\" />\r\n            </div>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <div>\r\n                <Link className=\"btn btn-primary\" to=\"/admin/book/new\">\r\n                  New Book\r\n                </Link>\r\n              </div>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n                  Sort\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item active={sort === 1} onClick={() => this.onSort('1')}>\r\n                    Sort by name A - Z\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item active={sort === 2} onClick={() => this.onSort('2')}>\r\n                    Sort by name Z - A\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            {/* Show if failed fetch */}\r\n            {error ? <Alert message=\"Can't get book from server\" /> : null}\r\n\r\n            <Table bordered responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>Cover</th>\r\n                  <th>Book Name</th>\r\n                  <th>Status</th>\r\n                  <th>Detail</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {books.map((val) => (\r\n                  <tr key={val.id}>\r\n                    <td>\r\n                      <img src={`http://localhost:8000/${val.cover}`} alt={val.name} width=\"50\" />\r\n                    </td>\r\n                    <td>{val.name}</td>\r\n                    <td>{val.status}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/admin/book/detail/${val.name.replace(/\\s/g, '-')}`,\r\n                          state: { id: val.id },\r\n                        }}\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        Detail\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n            <Pagination\r\n              activePage={options.page}\r\n              itemsCountPerPage={options.perPage}\r\n              totalItemsCount={parseInt(options.totalData, 10)}\r\n              pageRangeDisplayed={5}\r\n              onChange={this.handlePageChange}\r\n              itemClass=\"page-item\"\r\n              linkClass=\"page-link\"\r\n              hideNavigation\r\n            />\r\n          </Container>\r\n        </section>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  books: state.books,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchBook };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);\r\n","/* eslint-disable import/prefer-default-export */\r\nimport { get, post, patch, remove } from '../../services';\r\n\r\n// Get all genre\r\nexport const fetchGenre = (request) => {\r\n  return {\r\n    type: 'FETCH_GENRE',\r\n    payload: get({ url: `genre/${request ? request.id : ''}` }),\r\n  };\r\n};\r\n\r\n// Add New genre\r\nexport const postGenre = (request) => {\r\n  return {\r\n    type: 'POST_GENRE',\r\n    payload: post({\r\n      url: 'genre',\r\n      body: {\r\n        name: request.name,\r\n      },\r\n      config: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\n// Edit Selected genre\r\nexport const updateGenre = (request) => {\r\n  return {\r\n    type: 'UPDATE_GENRE',\r\n    payload: patch({\r\n      url: `genre/${request.id}`,\r\n      body: {\r\n        name: request.name,\r\n      },\r\n      config: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\n// Delete Selected genre\r\nexport const deleteGenre = (request) => {\r\n  return {\r\n    type: 'DELETE_GENRE',\r\n    payload: remove({\r\n      url: `genre/${request.id}`,\r\n      body: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n","/* eslint-disable import/prefer-default-export */\r\nimport { get, post, patch, remove } from '../../services';\r\n\r\n// Get all author\r\nexport const fetchAuthor = (request) => {\r\n  return {\r\n    type: 'FETCH_AUTHOR',\r\n    payload: get({ url: `author/${request ? request.id : ''}` }),\r\n  };\r\n};\r\n\r\n// Add New author\r\nexport const postAuthor = (request) => {\r\n  return {\r\n    type: 'POST_AUTHOR',\r\n    payload: post({\r\n      url: 'author',\r\n      body: {\r\n        name: request.name,\r\n      },\r\n      config: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\n// Edit Selected author\r\nexport const updateAuthor = (request) => {\r\n  return {\r\n    type: 'UPDATE_AUTHOR',\r\n    payload: patch({\r\n      url: `author/${request.id}`,\r\n      body: {\r\n        name: request.name,\r\n      },\r\n      config: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\n// Delete Selected author\r\nexport const deleteAuthor = (request) => {\r\n  return {\r\n    type: 'DELETE_AUTHOR',\r\n    payload: remove({\r\n      url: `author/${request.id}`,\r\n      body: {\r\n        headers: {\r\n          Authorization: request.apikey,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n};\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport Store from 'store2';\r\nimport Swal from 'sweetalert2';\r\nimport ImageUploader from 'react-images-upload';\r\nimport { Container, Row, Col, Badge, Alert, Form, Button } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { selectBook, updateBook, updateCover, removeBook } from '../../redux/actions/bookActions';\r\nimport { fetchGenre } from '../../redux/actions/genreActions';\r\nimport { fetchAuthor } from '../../redux/actions/authorActions';\r\n\r\n// Component\r\nimport Navbar from '../../components/organisms/navbar';\r\nimport Footer from '../../components/organisms/footer';\r\n\r\n// Base URL\r\nconst url = 'http://localhost:8000/';\r\n\r\nexport class Detail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      book: null,\r\n      genres: [],\r\n      authors: [],\r\n      bookName: null,\r\n      bookLanguage: null,\r\n      bookPublished: null,\r\n      bookGenre: null,\r\n      bookAuthor: null,\r\n      bookStatus: null,\r\n      bookDesc: null,\r\n      error: false,\r\n    };\r\n\r\n    const { state } = this.props.location;\r\n    if (!state) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n\r\n    if (!Store('login') && !Store('adminLogin') && !Store('pin')) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  getDetailBook = async () => {\r\n    try {\r\n      const { id } = this.props.location.state;\r\n      Store('bookId', id);\r\n      await this.props.selectBook(`/${id}`);\r\n      await this.props.fetchAuthor();\r\n      await this.props.fetchGenre();\r\n      const { detail } = this.props.book;\r\n      this.setState({\r\n        book: detail,\r\n        bookName: detail.name,\r\n        bookLanguage: detail.language,\r\n        bookPublished: detail.published,\r\n        bookGenre: detail.genre,\r\n        bookAuthor: detail.author,\r\n        bookStatus: detail.status,\r\n        bookDesc: detail.description,\r\n        genres: this.props.genres.result,\r\n        authors: this.props.authors.result,\r\n      });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  changeGenre = (e) => {\r\n    this.setState({ bookGenre: e });\r\n  };\r\n\r\n  changeAuthor = (e) => {\r\n    this.setState({ bookAuthor: e });\r\n  };\r\n\r\n  changeStatus = (e) => {\r\n    this.setState({ bookStatus: e });\r\n  };\r\n\r\n  onDrop = async (event) => {\r\n    if (event[0]) {\r\n      try {\r\n        const { id } = this.props.location.state;\r\n        const picture = event[0];\r\n        this.props.updateCover({ id, picture, apikey: Store('apikey') });\r\n        Swal.fire({\r\n          title: 'Edit Cover success',\r\n          text: '',\r\n          icon: 'success',\r\n        }).then(() => this.getDetailBook());\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: 'Edit Failed',\r\n          text: 'Make sure the code is correct',\r\n          icon: 'error',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { id } = this.props.location.state;\r\n      await this.props.updateBook(id, this.state, Store('apikey'));\r\n      Swal.fire({\r\n        title: 'Edit Book success',\r\n        text: '',\r\n        icon: 'success',\r\n      }).then(() => this.getDetailBook());\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Edit Book failed',\r\n        text: '',\r\n        icon: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  onDelete = async () => {\r\n    try {\r\n      const { id } = this.props.location.state;\r\n      this.props.removeBook({ id, apikey: Store('apikey') });\r\n      Swal.fire({\r\n        title: 'Delete Book success',\r\n        text: '',\r\n        icon: 'success',\r\n      }).then(() => {\r\n        const { history } = this.props;\r\n        history.push('/admin/book');\r\n      });\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Delete Book failed',\r\n        text: '',\r\n        icon: 'error',\r\n      }).then(() => {\r\n        const { history } = this.props;\r\n        history.push('/admin/book');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getDetailBook();\r\n  };\r\n\r\n  render() {\r\n    const { book, bookGenre, bookAuthor, bookStatus, error } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        {/* Banner Cover */}\r\n        {book ? (\r\n          <div\r\n            className=\"banner-cover animate__animated animate__fadeIn\"\r\n            style={{ backgroundImage: `url(${url + book.cover})` }}\r\n          />\r\n        ) : null}\r\n\r\n        {/* Book Detail */}\r\n        <section>\r\n          <Container className=\"mt-5\">\r\n            <Row>\r\n              <Col lg={3}>\r\n                {!book ? (\r\n                  <div className=\"mb-5\">\r\n                    <Skeleton height={350} />\r\n                  </div>\r\n                ) : (\r\n                  <img\r\n                    src={url + book.cover}\r\n                    className=\"w-100 animate__animated animate__fadeIn animate__slow rounded shadow-lg mb-5 mb-lg-0\"\r\n                    alt={book.name}\r\n                  />\r\n                )}\r\n              </Col>\r\n              <Col lg={9}>\r\n                {!book ? (\r\n                  <div className=\"mb-5\">\r\n                    {error ? <Alert message=\"Can't get book from server\" /> : null}\r\n                    <Skeleton height={50} className=\"mb-4\" />\r\n                    <Skeleton count={5} />\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <h2 className=\"font-weight-bold text-dark\">{book.name}</h2>\r\n                    <p className=\"font-weight-bold text-dark\">{book.author}</p>\r\n                    <Badge pill variant=\"primary mr-2 py-2 px-2\">\r\n                      {book.genre}\r\n                    </Badge>\r\n                    <Badge pill variant=\"dark py-2 px-2\">\r\n                      {book.language}\r\n                    </Badge>\r\n                    <p className=\"mt-3 text-justify text-dark\">{book.description}</p>\r\n                    <Button variant=\"danger\" className=\"mb-3 w-25 ml-auto\" onClick={this.onDelete}>\r\n                      Delete\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n\r\n        <br />\r\n\r\n        <section>\r\n          <Container>\r\n            <div className=\"head-title\">\r\n              <h2 className=\"font-weight-bold\">Update Book</h2>\r\n              <div className=\"divinder\" />\r\n            </div>\r\n            <Row>\r\n              <Col lg={4}>\r\n                <ImageUploader\r\n                  withIcon\r\n                  singleImage\r\n                  buttonText=\"Choose images\"\r\n                  onChange={this.onDrop}\r\n                  imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                  maxFileSize={5242880}\r\n                />\r\n              </Col>\r\n              {book ? (\r\n                <Col lg={8}>\r\n                  <Form onSubmit={this.onUpdate}>\r\n                    <Form.Group controlId=\"bookName\">\r\n                      <Form.Label>Book Name</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        defaultValue={book.name}\r\n                        onChange={(e) => this.setState({ bookName: e.target.value })}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"bookLanguage\">\r\n                      <Form.Label>Language</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        defaultValue={book.language}\r\n                        onChange={(e) => this.setState({ bookLanguage: e.target.value })}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"bookDate\">\r\n                      <Form.Label>Publish Date</Form.Label>\r\n                      <Form.Control\r\n                        type=\"date\"\r\n                        defaultValue={book.published}\r\n                        onChange={(e) => this.setState({ bookPublished: e.target.value })}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"bookGenre\">\r\n                      <Form.Label>Genre</Form.Label>\r\n                      <Select\r\n                        onChange={this.changeGenre}\r\n                        value={{ label: bookGenre.label || bookGenre, value: bookAuthor.value }}\r\n                        options={this.state.genres.map((val) => ({\r\n                          value: val.id,\r\n                          label: val.name,\r\n                        }))}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"bookAuthor\">\r\n                      <Form.Label>Author</Form.Label>\r\n                      <Select\r\n                        onChange={this.changeAuthor}\r\n                        value={{ label: bookAuthor.label || bookAuthor, value: bookAuthor.value }}\r\n                        options={this.state.authors.map((val) => ({\r\n                          value: val.id,\r\n                          label: val.name,\r\n                        }))}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"bookAuthor\">\r\n                      <Form.Label>Status</Form.Label>\r\n                      <Select\r\n                        onChange={this.changeStatus}\r\n                        value={{ label: bookStatus.label || bookStatus, value: bookStatus.value }}\r\n                        options={[\r\n                          { value: 1, label: 'Available' },\r\n                          { value: 2, label: 'Pending' },\r\n                          { value: 3, label: 'Not Available' },\r\n                        ]}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"5\"\r\n                        defaultValue={book.description}\r\n                        onChange={(e) => this.setState({ bookDesc: e.target.value })}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Button className=\"mb-3 w-25 ml-auto\" type=\"submit\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>\r\n                </Col>\r\n              ) : null}\r\n            </Row>\r\n          </Container>\r\n        </section>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authors: state.authors,\r\n  book: state.books,\r\n  genres: state.genres,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  selectBook,\r\n  fetchGenre,\r\n  fetchAuthor,\r\n  updateBook,\r\n  updateCover,\r\n  removeBook,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\r\n","/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport Store from 'store2';\r\nimport Swal from 'sweetalert2';\r\nimport ImageUploader from 'react-images-upload';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { postBook } from '../../redux/actions/bookActions';\r\nimport { fetchGenre } from '../../redux/actions/genreActions';\r\nimport { fetchAuthor } from '../../redux/actions/authorActions';\r\n\r\n// Component\r\nimport Navbar from '../../components/organisms/navbar';\r\nimport Footer from '../../components/organisms/footer';\r\n\r\nexport class newBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      genres: [],\r\n      authors: [],\r\n      bookName: null,\r\n      bookLanguage: null,\r\n      bookPublished: null,\r\n      bookGenre: null,\r\n      bookAuthor: null,\r\n      bookStatus: null,\r\n      bookDesc: null,\r\n      bookCover: null,\r\n      file: null,\r\n    };\r\n\r\n    if (!Store('login') && !Store('adminLogin') && !Store('pin')) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  changeGenre = (e) => {\r\n    this.setState({ bookGenre: e });\r\n  };\r\n\r\n  changeAuthor = (e) => {\r\n    this.setState({ bookAuthor: e });\r\n  };\r\n\r\n  changeStatus = (e) => {\r\n    this.setState({ bookStatus: e });\r\n  };\r\n\r\n  onDrop = (event) => {\r\n    if (event[0]) {\r\n      this.setState({\r\n        bookCover: URL.createObjectURL(event[0]),\r\n        file: event[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      this.props.postBook({ data: this.state, apikey: Store('apikey') });\r\n      Swal.fire({\r\n        title: 'Add New Book success',\r\n        text: '',\r\n        icon: 'success',\r\n      });\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Add New Book failed',\r\n        text: '',\r\n        icon: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.fetchGenre();\r\n    await this.props.fetchAuthor();\r\n    this.setState({\r\n      genres: this.props.genres.result,\r\n      authors: this.props.authors.result,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { bookCover, genres, authors } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        <section>\r\n          <Container>\r\n            <div className=\"head-title\">\r\n              <h2 className=\"font-weight-bold\">New Book</h2>\r\n              <div className=\"divinder\" />\r\n            </div>\r\n            <Form onSubmit={this.onSubmit}>\r\n              <Row>\r\n                <Col lg={4}>\r\n                  {bookCover ? (\r\n                    <img src={bookCover} className=\"w-100 h-50\" alt={bookCover} />\r\n                  ) : null}\r\n                  <ImageUploader\r\n                    withIcon\r\n                    singleImage\r\n                    buttonText=\"Choose images\"\r\n                    onChange={this.onDrop}\r\n                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                    maxFileSize={5242880}\r\n                  />\r\n                </Col>\r\n                <Col lg={8}>\r\n                  <Form.Group controlId=\"bookName\">\r\n                    <Form.Label>Book Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      onChange={(e) => this.setState({ bookName: e.target.value })}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"bookLanguage\">\r\n                    <Form.Label>Language</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      onChange={(e) => this.setState({ bookLanguage: e.target.value })}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"bookDate\">\r\n                    <Form.Label>Publish Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      onChange={(e) => this.setState({ bookPublished: e.target.value })}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"bookGenre\">\r\n                    <Form.Label>Genre</Form.Label>\r\n                    <Select\r\n                      onChange={this.changeGenre}\r\n                      options={genres.map((val) => ({\r\n                        value: val.id,\r\n                        label: val.name,\r\n                      }))}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"bookAuthor\">\r\n                    <Form.Label>Author</Form.Label>\r\n                    <Select\r\n                      onChange={this.changeAuthor}\r\n                      options={authors.map((val) => ({\r\n                        value: val.id,\r\n                        label: val.name,\r\n                      }))}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"bookAuthor\">\r\n                    <Form.Label>Status</Form.Label>\r\n                    <Select\r\n                      onChange={this.changeStatus}\r\n                      options={[\r\n                        { value: 1, label: 'Available' },\r\n                        { value: 2, label: 'Pending' },\r\n                        { value: 3, label: 'Not Available' },\r\n                      ]}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows=\"5\"\r\n                      onChange={(e) => this.setState({ bookDesc: e.target.value })}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Button className=\"mb-3 w-25 ml-auto\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Container>\r\n        </section>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  genres: state.genres,\r\n  authors: state.authors,\r\n});\r\n\r\nconst mapDispatchToProps = { postBook, fetchGenre, fetchAuthor };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(newBook);\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Store from 'store2';\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Table, Dropdown, Alert, Button, Modal, Form } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport { fetchGenre, postGenre, updateGenre, deleteGenre } from '../../redux/actions/genreActions';\r\n\r\n// Component\r\nimport Navbar from '../../components/organisms/navbar';\r\nimport Footer from '../../components/organisms/footer';\r\n\r\nexport class Genres extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      genres: [],\r\n      error: false,\r\n      showAddModal: false,\r\n      genreName: null,\r\n      genreId: null,\r\n      edit: false,\r\n      sort: 1,\r\n    };\r\n\r\n    if (!Store('login') && !Store('adminLogin') && !Store('pin')) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  getAllGenres = async () => {\r\n    try {\r\n      await this.props.fetchGenre();\r\n      const { genres } = this.props;\r\n      const { result } = genres;\r\n      this.setState({\r\n        genres: result,\r\n        error: false,\r\n      });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  onSort = (sort) => {\r\n    const { genres } = this.state;\r\n    if (parseInt(sort, 10) === 2) {\r\n      // DESC\r\n      genres.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      this.setState({ genres, sort: 2 });\r\n    } else {\r\n      // ASC\r\n      genres.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      this.setState({ genres, sort: 1 });\r\n    }\r\n  };\r\n\r\n  selectGenre = async (id) => {\r\n    try {\r\n      await this.props.fetchGenre({ id });\r\n      const { genres } = this.props;\r\n      const { result } = genres;\r\n      this.setState({\r\n        showAddModal: true,\r\n        genreName: result[0].name,\r\n        genreId: result[0].id,\r\n        edit: true,\r\n      });\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Delete Failed',\r\n        text: 'Something Wrong',\r\n        icon: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteGenre = async (id) => {\r\n    try {\r\n      await this.props.deleteGenre({ id, apikey: Store('apikey') });\r\n      Swal.fire({\r\n        title: 'Delete Success',\r\n        text: '',\r\n        icon: 'success',\r\n      }).then(() => this.getAllGenres());\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Delete Failed',\r\n        text: 'Something Wrong',\r\n        icon: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  onEdit = async () => {\r\n    try {\r\n      const { genreId, genreName } = this.state;\r\n      this.props.updateGenre({\r\n        id: genreId,\r\n        name: genreName,\r\n        apikey: Store('apikey'),\r\n      });\r\n      Swal.fire({\r\n        title: 'Edit Genre Success',\r\n        text: '',\r\n        icon: 'success',\r\n      }).then(() => {\r\n        this.getAllGenres();\r\n        this.setState({\r\n          showAddModal: false,\r\n          edit: false,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Edit Genre Failed',\r\n        text: '',\r\n        icon: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  addNew = async () => {\r\n    try {\r\n      const { genreName } = this.state;\r\n      this.props.postGenre({ name: genreName, apikey: Store('apikey') });\r\n      Swal.fire({\r\n        title: 'Add Genre Success',\r\n        text: '',\r\n        icon: 'success',\r\n      }).then(() => {\r\n        this.getAllGenres();\r\n        this.setState({\r\n          showAddModal: false,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Add Genre Failed',\r\n        text: '',\r\n        icon: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.edit) {\r\n      this.onEdit();\r\n    } else {\r\n      this.addNew();\r\n    }\r\n  };\r\n\r\n  // Show modal\r\n  handleAddClose = () => {\r\n    this.setState({ showAddModal: false });\r\n  };\r\n\r\n  // Hide modal\r\n  handleAddShow = () => {\r\n    this.setState({ showAddModal: true });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getAllGenres();\r\n  };\r\n\r\n  render() {\r\n    const { genres, error, sort, showAddModal } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        <section>\r\n          <Container>\r\n            <div className=\"head-title\">\r\n              <h3 className=\"main-title font-weight-bold\">List Genre</h3>\r\n              <div className=\"divinder\" />\r\n            </div>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <div>\r\n                <Button onClick={this.handleAddShow}>Add Genre</Button>\r\n              </div>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n                  Sort\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item active={sort === 1} onClick={() => this.onSort('1')}>\r\n                    Sort by name A - Z\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item active={sort === 2} onClick={() => this.onSort('2')}>\r\n                    Sort by name Z - A\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            {/* Show if failed fetch */}\r\n            {error ? <Alert message=\"Can't get Genres from server\" /> : null}\r\n\r\n            <Table bordered responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th width=\"75%\">Name</th>\r\n                  <th>Manage</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {genres.map((val) => (\r\n                  <tr key={val.id}>\r\n                    <td>{val.name}</td>\r\n                    <td>\r\n                      <Link\r\n                        className=\"btn btn-primary\"\r\n                        to={{\r\n                          pathname: `/genre/${val.name}`,\r\n                          state: { genreId: val.id, name: val.name },\r\n                        }}\r\n                      >\r\n                        Detail\r\n                      </Link>\r\n                      <Button variant=\"warning mx-2 my-2\" onClick={() => this.selectGenre(val.id)}>\r\n                        Edit\r\n                      </Button>\r\n                      <Button variant=\"danger\" onClick={() => this.deleteGenre(val.id)}>\r\n                        Delete\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Container>\r\n        </section>\r\n\r\n        <Modal show={showAddModal} onHide={this.handleAddClose} size=\"md\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Genres</Modal.Title>\r\n          </Modal.Header>\r\n          <Form onSubmit={this.onSubmit}>\r\n            <Modal.Body>\r\n              <Form.Group controlId=\"bookName\">\r\n                <Form.Label>Genres Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={this.state.genreName}\r\n                  onChange={(e) => this.setState({ genreName: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.handleAddClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        </Modal>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  genres: state.genres,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchGenre, postGenre, updateGenre, deleteGenre };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Genres);\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Store from 'store2';\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Table, Dropdown, Alert, Button, Modal, Form } from 'react-bootstrap';\r\n\r\n// Service\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  fetchAuthor,\r\n  postAuthor,\r\n  updateAuthor,\r\n  deleteAuthor,\r\n} from '../../redux/actions/authorActions';\r\n\r\n// Component\r\nimport Navbar from '../../components/organisms/navbar';\r\nimport Footer from '../../components/organisms/footer';\r\n\r\nexport class Authors extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      authors: [],\r\n      error: false,\r\n      showAddModal: false,\r\n      authorName: null,\r\n      authorId: null,\r\n      edit: false,\r\n      sort: 1,\r\n    };\r\n\r\n    if (!Store('login') && !Store('adminLogin') && !Store('pin')) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  getAllAuthors = async () => {\r\n    try {\r\n      await this.props.fetchAuthor();\r\n      const { result } = this.props.authors;\r\n      this.setState({ authors: result, error: false });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  onSort = (sort) => {\r\n    const { authors } = this.state;\r\n    if (parseInt(sort, 10) === 2) {\r\n      // DESC\r\n      authors.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      this.setState({ authors, sort: 2 });\r\n    } else {\r\n      // ASC\r\n      authors.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      this.setState({ authors, sort: 1 });\r\n    }\r\n  };\r\n\r\n  selectAuthors = async (id) => {\r\n    try {\r\n      await this.props.fetchAuthor({ id });\r\n      const { result } = this.props.authors;\r\n      this.setState({\r\n        showAddModal: true,\r\n        authorName: result[0].name,\r\n        authorId: result[0].id,\r\n        edit: true,\r\n      });\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Delete Failed',\r\n        text: 'Something Wrong',\r\n        icon: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteAuthors = async (id) => {\r\n    try {\r\n      this.props.deleteAuthor({ id, apikey: Store('apikey') });\r\n      Swal.fire({\r\n        title: 'Delete Success',\r\n        text: '',\r\n        icon: 'success',\r\n      }).then(() => this.getAllAuthors());\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Delete Failed',\r\n        text: 'Something Wrong',\r\n        icon: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  onEdit = async () => {\r\n    try {\r\n      const { authorId, authorName } = this.state;\r\n      await this.props.updateAuthor({\r\n        id: authorId,\r\n        name: authorName,\r\n        apikey: Store('apikey'),\r\n      });\r\n      Swal.fire({\r\n        title: 'Edit authors Success',\r\n        text: '',\r\n        icon: 'success',\r\n      }).then(() => {\r\n        this.getAllAuthors();\r\n        this.setState({\r\n          showAddModal: false,\r\n          edit: false,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Edit authors Failed',\r\n        text: '',\r\n        icon: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  addNew = async () => {\r\n    try {\r\n      const { authorName } = this.state;\r\n      await this.props.postAuthor({ name: authorName, apikey: Store('apikey') });\r\n      Swal.fire({\r\n        title: 'Add authors Success',\r\n        text: '',\r\n        icon: 'success',\r\n      }).then(() => {\r\n        this.getAllAuthors();\r\n        this.setState({\r\n          showAddModal: false,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Add authors Failed',\r\n        text: '',\r\n        icon: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.edit) {\r\n      this.onEdit();\r\n    } else {\r\n      this.addNew();\r\n    }\r\n  };\r\n\r\n  // Show modal\r\n  handleAddClose = () => {\r\n    this.setState({ showAddModal: false });\r\n  };\r\n\r\n  // Hide modal\r\n  handleAddShow = () => {\r\n    this.setState({ showAddModal: true });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getAllAuthors();\r\n  };\r\n\r\n  render() {\r\n    const { authors, error, sort, showAddModal } = this.state;\r\n    return (\r\n      <>\r\n        {/* Navbar */}\r\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n        <Navbar {...this.props} />\r\n\r\n        <section>\r\n          <Container>\r\n            <div className=\"head-title\">\r\n              <h3 className=\"main-title font-weight-bold\">List Authors</h3>\r\n              <div className=\"divinder\" />\r\n            </div>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <div>\r\n                <Button onClick={this.handleAddShow}>Add Authors</Button>\r\n              </div>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n                  Sort\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item active={sort === 1} onClick={() => this.onSort('1')}>\r\n                    Sort by name A - Z\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item active={sort === 2} onClick={() => this.onSort('2')}>\r\n                    Sort by name Z - A\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            {/* Show if failed fetch */}\r\n            {error ? <Alert message=\"Can't get authors from server\" /> : null}\r\n\r\n            <Table bordered responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th width=\"75%\">Name</th>\r\n                  <th>Manage</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {authors.map((val) => (\r\n                  <tr key={val.id}>\r\n                    <td>{val.name}</td>\r\n                    <td>\r\n                      <Link\r\n                        className=\"btn btn-primary disabled\"\r\n                        to={{\r\n                          pathname: `/authors/${val.name}`,\r\n                          state: { authorId: val.id, name: val.name },\r\n                        }}\r\n                      >\r\n                        Detail\r\n                      </Link>\r\n                      <Button\r\n                        variant=\"warning mx-2 my-2\"\r\n                        onClick={() => this.selectAuthors(val.id)}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button variant=\"danger\" onClick={() => this.deleteAuthors(val.id)}>\r\n                        Delete\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Container>\r\n        </section>\r\n\r\n        <Modal show={showAddModal} onHide={this.handleAddClose} size=\"md\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Authors</Modal.Title>\r\n          </Modal.Header>\r\n          <Form onSubmit={this.onSubmit}>\r\n            <Modal.Body>\r\n              <Form.Group controlId=\"bookName\">\r\n                <Form.Label>Authors Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={this.state.authorName}\r\n                  onChange={(e) => this.setState({ authorName: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.handleAddClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        </Modal>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authors: state.authors,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchAuthor, postAuthor, updateAuthor, deleteAuthor };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authors);\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCPV9cKULq9wzCnme4u3FU1aInf7yLZuCg',\r\n  authDomain: 'kumabook-c675d.firebaseapp.com',\r\n  databaseURL: 'https://kumabook-c675d.firebaseio.com',\r\n  projectId: 'kumabook-c675d',\r\n  storageBucket: 'kumabook-c675d.appspot.com',\r\n  messagingSenderId: '608657777718',\r\n  appId: '1:608657777718:web:8d64158cc26f0a2b17e497',\r\n  measurementId: 'G-P67ZJ17NVZ',\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\nexport const facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Store from 'store2';\r\nimport firebase from 'firebase/app';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { post } from '../../services';\r\nimport { googleProvider, facebookProvider } from './auth';\r\n\r\nimport logo from '../../assets/img/logo.png';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      loading: false,\r\n      error: false,\r\n      errorMsg: null,\r\n    };\r\n    if (Store('login')) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  onLogin = async () => {\r\n    try {\r\n      const { email, password } = this.state;\r\n      const login = await post({\r\n        url: 'auth/login',\r\n        body: { email, password },\r\n      });\r\n      const { status } = login;\r\n      if (status === 200) {\r\n        const { role, apiKey, userId } = login.data.data;\r\n        if (role === 2) {\r\n          Store({\r\n            userId,\r\n            apikey: apiKey,\r\n            role,\r\n            login: true,\r\n            adminLogin: true,\r\n            pin: '070402',\r\n          });\r\n        } else {\r\n          Store({ userId, apikey: apiKey, role, login: true });\r\n        }\r\n        const { history } = this.props;\r\n        history.push('/');\r\n      } else {\r\n        const { message } = login.response.data;\r\n        this.setState({\r\n          error: true,\r\n          errorMsg: message,\r\n          loading: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: true, loading: false });\r\n    }\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    await this.onLogin();\r\n  };\r\n\r\n  closeError = () => {\r\n    this.setState({ error: false });\r\n  };\r\n\r\n  googleAuth = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleProvider)\r\n      .then((res) => {\r\n        const { email, uid } = res.user;\r\n        this.setState({ email, password: uid, loading: true });\r\n        this.onLogin();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          error: true,\r\n          errorMsg: 'Oopp.. something wrong',\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  facebookAuth = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(facebookProvider)\r\n      .then((res) => {\r\n        const { email, uid } = res.user;\r\n        if (email) {\r\n          this.setState({ email, password: uid, loading: true });\r\n          this.onLogin();\r\n        } else {\r\n          this.setState({\r\n            error: true,\r\n            errorMsg: 'Email not found',\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          error: true,\r\n          errorMsg: 'Oopp.. something wrong',\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { loading, error, errorMsg } = this.state;\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Row>\r\n            <Col lg={4} className=\"mx-auto my-5\">\r\n              <Link to=\"/\">\r\n                <img src={logo} className=\"w-50 mx-auto d-block\" alt=\"kuma book\" />\r\n              </Link>\r\n              <p className=\"font-weight-light text-dark text-center mt-3 mb-5\">\r\n                Log In to join the Kuma Book community.\r\n              </p>\r\n              {error ? (\r\n                <Alert variant=\"danger\" onClose={this.closeError} dismissible>\r\n                  <Alert.Heading>Login Failed</Alert.Heading>\r\n                  <p>{errorMsg}</p>\r\n                </Alert>\r\n              ) : null}\r\n              <Form onSubmit={this.onSubmit} className=\"mt-3 mb-3\">\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email address...\"\r\n                    onChange={(e) => this.setState({ email: e.target.value })}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password...\"\r\n                    onChange={(e) => this.setState({ password: e.target.value })}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button className=\"mt-4\" variant=\"primary\" type=\"submit\" disabled={loading} block>\r\n                  {loading ? 'Loading…' : 'Log in'}\r\n                </Button>\r\n              </Form>\r\n              <hr className=\"my-4\" />\r\n              <Button variant=\"danger\" className=\"btn-google\" onClick={this.googleAuth} block>\r\n                {loading ? (\r\n                  'Loading…'\r\n                ) : (\r\n                  <>\r\n                    <i className=\"fab fa-google mr-2\" aria-hidden=\"true\" />\r\n                    <span>Log In with Google</span>\r\n                  </>\r\n                )}\r\n              </Button>\r\n              <div className=\"my-2\" />\r\n              <Button variant=\"dark\" className=\"btn-facebook\" onClick={this.facebookAuth} block>\r\n                {loading ? (\r\n                  'Loading…'\r\n                ) : (\r\n                  <>\r\n                    <i className=\"fab fa-facebook mr-2\" aria-hidden=\"true\" />\r\n                    <span>Log In with Facebook</span>\r\n                  </>\r\n                )}\r\n              </Button>\r\n              <div className=\"text-bottom text-center mt-4\">\r\n                <p className=\"font-weight-light text-dark d-inline mr-1\">\r\n                  Don&apos;t have an account?\r\n                </p>\r\n                <Link to=\"sign-up\">Sign Up</Link>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport Store from 'store2';\r\nimport firebase from 'firebase/app';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { googleProvider, facebookProvider } from './auth';\r\nimport { post } from '../../services';\r\n\r\nimport logo from '../../assets/img/logo.png';\r\n\r\nexport default class SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      password2: null,\r\n      loading: false,\r\n      error: false,\r\n      errorMsg: null,\r\n    };\r\n    if (Store('login')) {\r\n      const { history } = this.props;\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  onSignUp = async () => {\r\n    try {\r\n      const { email, password, password2 } = this.state;\r\n      if (password === password2) {\r\n        const signUp = await post({\r\n          url: 'auth/signIn',\r\n          body: { email, password },\r\n        });\r\n        const { status } = signUp;\r\n        if (status === 200) {\r\n          const { history } = this.props;\r\n          history.push('/login');\r\n        } else {\r\n          const { message } = signUp.response.data;\r\n          this.setState({\r\n            error: true,\r\n            errorMsg: message,\r\n            loading: false,\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          error: true,\r\n          errorMsg: 'Password not match',\r\n          loading: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: true, loading: false });\r\n    }\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    await this.onSignUp();\r\n  };\r\n\r\n  closeError = () => {\r\n    this.setState({ error: false });\r\n  };\r\n\r\n  googleAuth = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleProvider)\r\n      .then((res) => {\r\n        const { email, uid } = res.user;\r\n        this.setState({ email, password: uid, password2: uid, loading: true });\r\n        this.onSignUp();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          error: true,\r\n          errorMsg: 'Oopp.. something wrong',\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  facebookAuth = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(facebookProvider)\r\n      .then((res) => {\r\n        const { email, uid } = res.user;\r\n        if (email) {\r\n          this.setState({ email, password: uid, loading: true });\r\n          this.onLogin();\r\n        } else {\r\n          this.setState({\r\n            error: true,\r\n            errorMsg: 'Email not found',\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          error: true,\r\n          errorMsg: 'Oopp.. something wrong',\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { loading, error, errorMsg } = this.state;\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Row>\r\n            <Col lg={4} className=\"mx-auto my-5\">\r\n              <Link to=\"/\">\r\n                <img src={logo} className=\"w-50 mx-auto d-block\" alt=\"kuma book\" />\r\n              </Link>\r\n              <p className=\"font-weight-light text-dark text-center mt-3 mb-5\">\r\n                Sign Up to join the Kuma Book community.\r\n              </p>\r\n              {error ? (\r\n                <Alert variant=\"danger\" onClose={this.closeError} dismissible>\r\n                  <Alert.Heading>Sign Up Failed</Alert.Heading>\r\n                  <p>{errorMsg}</p>\r\n                </Alert>\r\n              ) : null}\r\n              <Form onSubmit={this.onSubmit} className=\"mt-3 mb-3\">\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email address...\"\r\n                    onChange={(e) => this.setState({ email: e.target.value })}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password...\"\r\n                    onChange={(e) => this.setState({ password: e.target.value })}\r\n                    required\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Minimum eight characters, at least one number\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword2\">\r\n                  <Form.Label>Password Confirmation</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password confirmation...\"\r\n                    onChange={(e) => this.setState({ password2: e.target.value })}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button className=\"mt-4\" variant=\"primary\" type=\"submit\" disabled={loading} block>\r\n                  {loading ? 'Loading…' : 'Sign Up'}\r\n                </Button>\r\n              </Form>\r\n              <hr className=\"my-4\" />\r\n              <Button variant=\"danger\" className=\"btn-google\" onClick={this.googleAuth} block>\r\n                <i className=\"fab fa-google mr-2\" aria-hidden=\"true\" />\r\n                <span>Sign Up with Google</span>\r\n              </Button>\r\n              <div className=\"my-2\" />\r\n              <Button variant=\"dark\" className=\"btn-facebook\" onClick={this.facebookAuth} block>\r\n                <i className=\"fab fa-facebook mr-2\" aria-hidden=\"true\" />\r\n                <span>Sign Up with Facebook</span>\r\n              </Button>\r\n              <div className=\"text-bottom text-center mt-4\">\r\n                <p className=\"font-weight-light text-dark d-inline mr-1\">\r\n                  Already have an account?\r\n                </p>\r\n                <Link to=\"login\">Log In</Link>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport Store from 'store2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { post } from '../../services';\r\n\r\nimport logo from '../../assets/img/logo.png';\r\n\r\nexport default class Activate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: Store('email') || null,\r\n      code: null,\r\n      loading: false,\r\n      error: false,\r\n      errorMsg: null,\r\n    };\r\n    if (Store('login')) {\r\n      const { history } = this.props;\r\n      history.push('/sign-up');\r\n    }\r\n  }\r\n\r\n  onActivate = async () => {\r\n    try {\r\n      const { email, code } = this.state;\r\n      const activate = await post({\r\n        url: 'auth/activate',\r\n        body: { email, code },\r\n      });\r\n      const { status } = activate;\r\n      if (status) {\r\n        const { history } = this.props;\r\n        Swal.fire('Activate success', 'successfully activate account', 'success');\r\n        history.push('/login');\r\n      } else {\r\n        const { message } = activate.response.data;\r\n        this.setState({\r\n          error: true,\r\n          errorMsg: message,\r\n          loading: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: true, loading: false });\r\n    }\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    await this.onActivate();\r\n  };\r\n\r\n  closeError = () => {\r\n    this.setState({ error: false });\r\n  };\r\n\r\n  render() {\r\n    const { loading, error, errorMsg } = this.state;\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Row>\r\n            <Col lg={4} className=\"mx-auto my-5\">\r\n              <Link to=\"/\">\r\n                <img src={logo} className=\"w-50 mx-auto d-block\" alt=\"kuma book\" />\r\n              </Link>\r\n              <p className=\"font-weight-light text-dark text-center mt-3 mb-5\">\r\n                Activate account to join the Kuma Book community.\r\n              </p>\r\n              {error ? (\r\n                <Alert variant=\"danger\" onClose={this.closeError} dismissible>\r\n                  <Alert.Heading>Login Failed</Alert.Heading>\r\n                  <p>{errorMsg}</p>\r\n                </Alert>\r\n              ) : null}\r\n              <Form onSubmit={this.onSubmit} className=\"mt-3 mb-3\">\r\n                <Form.Group controlId=\"formBasicPin\">\r\n                  <Form.Label>Pin Code</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Pin code...\"\r\n                    onChange={(e) => this.setState({ code: e.target.value })}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button className=\"mt-4\" variant=\"primary\" type=\"submit\" disabled={loading} block>\r\n                  {loading ? 'Loading…' : 'Activate'}\r\n                </Button>\r\n              </Form>\r\n              <div className=\"text-bottom text-center\">\r\n                <p className=\"font-weight-light text-dark d-inline mr-1\">\r\n                  Don&apos;t have an account?\r\n                </p>\r\n                <Link to=\"sign-up\">Sign Up</Link>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable import/no-named-as-default */\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// Use Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n// Pages\nimport Home from './pages/Home';\nimport Books from './pages/Books';\nimport Detail from './pages/Detail';\nimport Genre from './pages/Genre';\n\nimport Profile from './pages/member/Profile';\nimport Favorite from './pages/member/Favorite';\nimport Review from './pages/member/Review';\n\nimport AdminBook from './pages/admin/Books';\nimport AdminDetail from './pages/admin/Detail';\nimport NewBook from './pages/admin/NewBook';\nimport AdminGenre from './pages/admin/Genres';\nimport AdminAuthor from './pages/admin/Authors';\n\nimport Login from './pages/auth/Login';\nimport SignUp from './pages/auth/SignUp';\nimport Activate from './pages/auth/Activate';\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/book\" exact component={Books} />\n          <Route path=\"/book/:id\" component={Detail} />\n          <Route path=\"/genre/:id\" component={Genre} />\n\n          {/* Profile */}\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/favorite\" component={Favorite} />\n          <Route path=\"/review\" component={Review} />\n\n          {/* Admin */}\n          <Route path=\"/admin/book\" exact component={AdminBook} />\n          <Route path=\"/admin/book/new\" component={NewBook} />\n          <Route path=\"/admin/book/detail/:id\" component={AdminDetail} />\n          <Route path=\"/admin/genre\" component={AdminGenre} />\n          <Route path=\"/admin/author\" component={AdminAuthor} />\n\n          {/* Auth */}\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/sign-up\" component={SignUp} />\n          <Route path=\"/activate\" component={Activate} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\n// eslint-disable-next-line no-undef\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5451dc56.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.b76ecdbb.png\";"],"sourceRoot":""}